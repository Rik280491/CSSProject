@import "_variables.scss";
@import "typography.scss";

// Mixins - custom fns
@mixin display-flex() {
	display: -webkit-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin media-min-width($width) {
	@media (min-width: $width) {
		@content;
	}
}

// media queries can be nested. Mixins can also handle media queries
html {
	font-size: 94.75%;

	// @media (min-width: 40rem) {
	// 	font-size: 125%;
	// }
	@include media-min-width(40rem) {
		font-size: 125%;
	}
}

body {
	font-family: Arial, sans-serif;
	margin: 0;
}

// Nested Properties - see flex. @include - mixins
.container {
	@include display-flex();
	// flex-direction: column;
	// flex-wrap: nowrap;
	flex: {
		direction: column;
		wrap: nowrap;
	}
	align-items: center;
	padding: 3rem 0;
	box-sizing: border-box;
}

// newly created class (not in index.html) for inheritance
.sass-section {
	border: $border-default;
	background: lighten($color: map-get($colours, main), $amount: 72%);
	padding: 2rem;
	text-align: center;
	width: 90%;
	box-sizing: border-box;

	@include media-min-width(40rem) {
		width: 30rem;
	}
}

// Built in fns - lighten. check docs for many more
.sass-introduction {
	@extend .sass-section;
	box-shadow: 0.2rem 0.2rem 0.1rem #ccc;

	p {
		margin: 0;
	}
}

// Simple Arithmetics supported. check numeric operators page in docs.
.sass-details {
	@extend .sass-section;
	//margin: 2rem 0;
	margin: $size-default * 2 0;
}

.section-header {
	border-bottom: 0.05rem solid map-get($colours, main);

	h1 {
		margin: 0 0 $size-default 0;
	}
}

// Nested Rules. @include - mixins
.documentation-links {
	list-style: none;
	margin: $size-default 0 0 0;
	padding: 0;
	@include display-flex();
	flex-direction: column;

	li {
		margin: 0.2rem 0;
		background: white;
	}

	.documentation-link {
		text-decoration: none;
		color: map-get($colours, main);
		display: block;
		padding: 0.2rem;
		border: $border-default;

		// Ampersand operator - connected to the above element(...link:hover), rather than nested(...link :hover).
		&:hover,
		&:active {
			color: white;
			background: map-get($colours, secondary);
			border-color: map-get($colours, secondary);
		}
	}
}

// .documentation-links li {}
// .documentation-links .documentation-link {}
// .documentation-links .documentation-link:hover,
// .documentation-links .documentation-link:active {}
